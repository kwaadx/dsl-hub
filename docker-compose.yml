x-default-logging: &default-logging
  driver: json-file
  options:
    max-size: "10m"
    max-file: "10"

x-health-http: &health-http
  interval: 10s
  timeout: 3s
  retries: 10
  start_period: 10s

x-health-db: &health-db
  test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-dsl_hub} -h localhost -p ${DB_PORT:-5432}"]
  interval: 10s
  timeout: 5s
  retries: 10
  start_period: 10s

networks:
  dsl-hub-net: {}

volumes:
  db_data: {}
  web_node_modules: {}
  api_node_modules: {}

services:
  db:
    image: postgres:17-alpine
    container_name: dsl-hub-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-dsl_hub}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck: *health-db
    restart: unless-stopped
    logging: *default-logging
    networks: [dsl-hub-net]

  api:
    build:
      context: ./apps/api
    container_name: dsl-hub-api
    env_file:
      - .env
      - .env.local
    environment:
      PORT: ${API_PORT:-3001}
      NODE_ENV: development
      LOG_LEVEL: ${LOG_LEVEL:-debug}
      CHOKIDAR_USEPOLLING: "${CHOKIDAR_USEPOLLING:-1}"
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-dsl_hub}
      DB_PORT: ${DB_PORT:-5432}
      DATABASE_HOST: db
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:${DB_PORT:-5432}/${POSTGRES_DB:-dsl_hub}?schema=public
    ports:
      - "${API_PORT:-3001}:${API_PORT:-3001}"
    volumes:
      - ./apps/api/src:/app/src
      - ./apps/api/prisma:/app/prisma
      - api_node_modules:/app/node_modules
    command: >
      sh -c "npm ci &&
             npx prisma generate &&
             npm run db:push &&
             npm run dev"
    healthcheck:
      test: ["CMD-SHELL", "node -e \"require('http').get('http://localhost:${API_PORT:-3001}/health',r=>process.exit(r.statusCode===200?0:1)).on('error',()=>process.exit(1))\""]
      <<: *health-http
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    logging: *default-logging
    networks: [dsl-hub-net]

  web:
    build:
      context: ./apps/web
    container_name: dsl-hub-web
    env_file:
      - .env
      - .env.local
    environment:
      NODE_ENV: development
      LOG_LEVEL: ${LOG_LEVEL:-debug}
      WEB_HOST: ${WEB_HOST:-0.0.0.0}
      WEB_PORT: ${WEB_PORT:-3000}
    ports:
      - "${WEB_PORT:-3000}:${WEB_PORT:-3000}"
    volumes:
      - ./apps/web:/app/web
      - web_node_modules:/app/web/node_modules
    command: >
      sh -c "npm ci --include=dev &&
             npm run dev -- --host ${WEB_HOST:-0.0.0.0} --port ${WEB_PORT:-3000}"
    restart: unless-stopped
    logging: *default-logging
    networks: [dsl-hub-net]
