x-default-logging: &default-logging
  driver: json-file
  options:
    max-size: "10m"
    max-file: "10"

x-health-http: &health-http
  interval: 10s
  timeout: 3s
  retries: 10
  start_period: 10s

x-health-db: &health-db
  test: ["CMD-SHELL", "pg_isready -q -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-postgres} || exit 1"]
  interval: 10s
  timeout: 5s
  retries: 10
  start_period: 10s

networks:
  dsl-hub-net: {}

volumes:
  db_data: {}
  web_node_modules: {}
  runtime_queue: {}

services:
  # ==========================
  # Database
  # ==========================
  db:
    image: postgres:17-alpine
    container_name: dsl-hub-db
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck: *health-db
    restart: unless-stopped
    logging: *default-logging
    networks: [dsl-hub-net]

  # ==========================
  # API (Python FastAPI)
  # ==========================
  api:
    build:
      context: ./apps/api
      dockerfile: Dockerfile
    container_name: dsl-hub-api
    env_file:
      - .env
      - .env.local
    working_dir: /app/api
    volumes:
      - ./apps/api:/app/api
    ports:
      - "${API_PORT:-8000}:${API_PORT:-8000}"
    command: >
      sh -c "python -m uvicorn src.main:app --host ${API_HOST:-0.0.0.0} --port ${API_PORT:-8000} --reload"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:${API_PORT:-8000}/healthz || exit 1"]
      <<: *health-http
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    logging: *default-logging
    networks: [dsl-hub-net]

  # ==========================
  # Frontend (Vue 3 + Vite)
  # ==========================
  web:
    build:
      context: ./apps/web
      dockerfile: Dockerfile
    container_name: dsl-hub-web
    env_file:
      - .env
      - .env.local
    working_dir: /app/web
    volumes:
      - ./apps/web:/app/web
      - web_node_modules:/app/web/node_modules
    ports:
      - "${WEB_PORT:-3000}:${WEB_PORT:-3000}"
    command: >
      sh -c "npm ci --include=dev &&
             npm run dev -- --host ${WEB_HOST:-0.0.0.0} --port ${WEB_PORT:-3000}"
    restart: unless-stopped
    logging: *default-logging
    networks: [dsl-hub-net]

  # ======================
  # Dozzle Logs Viewer
  # ======================
  dozzle:
    image: amir20/dozzle:latest
    container_name: dsl-hub-dozzle
    env_file:
      - .env
      - .env.local
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 8080:8080
    restart: unless-stopped
    logging: *default-logging
    networks: [dsl-hub-net]

#  # ==========================
#  # Go Runtime (no HTTP)
#  # ==========================
#  runtime:
#    build:
#      context: ./apps/runtime
#      dockerfile: Dockerfile
#    container_name: dsl-hub-runtime
#    env_file:
#      - .env
#      - .env.local
#    environment:
#      RUNTIME_INBOX: /queue/inbox
#      RUNTIME_OUTBOX: /queue/outbox
#      POLL_INTERVAL_MS: 500
#      TZ: ${TZ:-Europe/Tirane}
#    volumes:
#      - runtime_queue:/queue
#      - ./schemas:/schemas:ro
#    restart: unless-stopped
#    logging: *default-logging
#    networks: [dsl-hub-net]
#
#  # ==========================
#  # Python Drivers (stub)
#  # ==========================
#  drivers:
#    build:
#      context: ./apps/drivers
#      dockerfile: Dockerfile
#    container_name: dsl-hub-drivers
#    env_file:
#      - .env
#      - .env.local
#    environment:
#      QUEUE_OUTBOX: /queue/outbox
#      DRIVER_OUT: /queue/driver_out
#      POLL_INTERVAL_MS: 500
#    volumes:
#      - runtime_queue:/queue
#    restart: unless-stopped
#    logging: *default-logging
#    networks: [dsl-hub-net]