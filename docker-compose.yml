x-default-logging: &default-logging
  driver: json-file
  options:
    max-size: "10m"
    max-file: "10"

x-health-http: &health-http
  interval: 10s
  timeout: 3s
  retries: 10

x-health-db: &health-db
  test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-dsl_hub} -h localhost -p ${DB_PORT:-5432}"]
  interval: 10s
  timeout: 5s
  retries: 10

networks:
  dsl-hub-net: {}

volumes:
  db_data: {}
  web_node_modules: {}
  api_node_modules: {}

services:
  # =========================
  # Frontend (Vue 3 + Vite)
  # =========================
  web:
    build:
      context: ./apps/web
    container_name: dsl-hub-web
    env_file:
      - .env
      - .env.local
    environment:
      MODE: ${MODE:-prod}
      NODE_ENV: ${NODE_ENV:-production}
      LOG_LEVEL: ${LOG_LEVEL:-info}
      WEB_PORT: ${WEB_PORT:-3000}
      WEB_HOST: ${WEB_HOST:-0.0.0.0}
      VITE_API_BASE_URL: ${VITE_API_BASE_URL:-http://api:${API_PORT:-3001}}
      VITE_HMR_USE_WSS: ${VITE_HMR_USE_WSS:-false}
      WATCH_POLL: ${WATCH_POLL:-1}
      PUBLIC_DEV_HOST: ${PUBLIC_DEV_HOST:-localhost}
    ports:
      - "${WEB_PORT:-3000}:${WEB_PORT:-3000}"
    volumes:
      - ./apps/web:/app/web
      - web_node_modules:/app/web/node_modules
    command: >
      sh -c "npm ci --include=dev &&
             npm run dev -- --host ${WEB_HOST:-0.0.0.0} --port ${WEB_PORT:-3000}"
#    depends_on:
#      api:
#        condition: service_healthy
    restart: unless-stopped
    logging: *default-logging
    networks: [dsl-hub-net]

  api:
    build: ./apps/api
    container_name: dsl-hub-api
    env_file:
      - .env
      - .env.local
    ports:
      - "8080:8080"
    volumes:
      - ./apps/api/src:/app/src
      - ./apps/api/prisma:/app/prisma
    command: sh -c "npm run db:push && npm run dev"
  # =========================
  # Backend (Node.js Express)
  # =========================
#  api:
#    build:
#      context: ./apps/api
#    container_name: dsl-hub-api
#    env_file:
#      - .env
#      - .env.local
#    environment:
#      MODE: ${MODE:-dev}
#      NODE_ENV: ${NODE_ENV:-development}
#      LOG_LEVEL: ${LOG_LEVEL:-info}
#      API_HOST: ${API_HOST:-0.0.0.0}
#      API_PORT: ${API_PORT:-3001}
#      CHOKIDAR_USEPOLLING: ${CHOKIDAR_USEPOLLING:-1}
#      DATABASE_URL: ${DATABASE_URL:-postgres://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:${DB_PORT:-5432}/${POSTGRES_DB:-dsl_hub}}
#    ports:
#      - "${API_PORT:-3001}:${API_PORT:-3001}"
#    volumes:
#      - ./apps/api:/app/api
#      - api_node_modules:/app/api/node_modules
#    command: >
#      sh -c "npm ci &&
#             npm run dev"
#    healthcheck:
#      test: ["CMD-SHELL", "wget -qO- http://localhost:${API_PORT:-3001}/health || exit 1"]
#      <<: *health-http
#    depends_on:
#      db:
#        condition: service_healthy
#    restart: unless-stopped
#    logging: *default-logging
#    networks: [dsl-hub-net]

  # =========================
  # Database (Postgres)
  # =========================
  db:
    image: postgres:17-alpine
    container_name: dsl-hub-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-dsl_hub}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck: *health-db
    restart: unless-stopped
    logging: *default-logging
    networks: [dsl-hub-net]
